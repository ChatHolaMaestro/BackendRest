# Generated by Django 4.1.7 on 2023-03-21 13:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Relative',
            fields=[
                ('first_name', models.CharField(blank=True, help_text='Nombre de pila', max_length=100, verbose_name='Nombre(s)')),
                ('last_name', models.CharField(blank=True, help_text='Apellidos completos', max_length=100, verbose_name='Apellidos')),
                ('identification_type', models.CharField(blank=True, choices=[('TI', 'Tarjeta de Identidad'), ('CC', 'Cédula de Ciudadanía'), ('CE', 'Cédula de Extranjería'), ('NUIP', 'Número Único de Identificación Personal'), ('PA', 'Pasaporte')], max_length=5, verbose_name='Tipo de identificación')),
                ('identification_number', models.CharField(blank=True, help_text='Número de identificación sin puntos ni guiones', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_identification_number', message='El número de identificación debe ser solo números sin puntos, guiones o espacios.', regex='^\\d+$')], verbose_name='Número de identificación')),
                ('phone_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='El número de teléfono debe ser solo números sin puntos, guiones o espacios.', regex='^\\d+$')], verbose_name='Número de teléfono')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('deleted_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Fecha de eliminación')),
            ],
            options={
                'verbose_name': 'Acudiente',
                'verbose_name_plural': 'Acudientes',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('first_name', models.CharField(blank=True, help_text='Nombre de pila', max_length=100, verbose_name='Nombre(s)')),
                ('last_name', models.CharField(blank=True, help_text='Apellidos completos', max_length=100, verbose_name='Apellidos')),
                ('identification_type', models.CharField(blank=True, choices=[('TI', 'Tarjeta de Identidad'), ('CC', 'Cédula de Ciudadanía'), ('CE', 'Cédula de Extranjería'), ('NUIP', 'Número Único de Identificación Personal'), ('PA', 'Pasaporte')], max_length=5, verbose_name='Tipo de identificación')),
                ('identification_number', models.CharField(blank=True, help_text='Número de identificación sin puntos ni guiones', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_identification_number', message='El número de identificación debe ser solo números sin puntos, guiones o espacios.', regex='^\\d+$')], verbose_name='Número de identificación')),
                ('phone_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='El número de teléfono debe ser solo números sin puntos, guiones o espacios.', regex='^\\d+$')], verbose_name='Número de teléfono')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('deleted_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Fecha de eliminación')),
                ('grade', models.CharField(choices=[('PJD', 'Pre-Jardín'), ('JD', 'Jardín'), ('TR', 'Transición'), ('1', 'Primero'), ('2', 'Segundo'), ('3', 'Tercero'), ('4', 'Cuarto'), ('5', 'Quinto'), ('6', 'Sexto'), ('7', 'Séptimo'), ('8', 'Octavo'), ('9', 'Noveno'), ('10', 'Décimo'), ('11', 'Once')], max_length=3, verbose_name='Grado')),
                ('sex', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], default='M', max_length=1, verbose_name='Sexo')),
                ('age', models.IntegerField(verbose_name='Edad')),
                ('working_hours', models.CharField(choices=[('M', 'Mañana'), ('T', 'Tarde')], default='M', max_length=1, verbose_name='Jornada')),
                ('relatives', models.ManyToManyField(blank=True, related_name='students', to='students.relative')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='schools.school')),
            ],
            options={
                'verbose_name': 'Estudiante',
                'verbose_name_plural': 'Estudiantes',
            },
        ),
        migrations.CreateModel(
            name='HistoricalStudent',
            fields=[
                ('first_name', models.CharField(blank=True, help_text='Nombre de pila', max_length=100, verbose_name='Nombre(s)')),
                ('last_name', models.CharField(blank=True, help_text='Apellidos completos', max_length=100, verbose_name='Apellidos')),
                ('identification_type', models.CharField(blank=True, choices=[('TI', 'Tarjeta de Identidad'), ('CC', 'Cédula de Ciudadanía'), ('CE', 'Cédula de Extranjería'), ('NUIP', 'Número Único de Identificación Personal'), ('PA', 'Pasaporte')], max_length=5, verbose_name='Tipo de identificación')),
                ('identification_number', models.CharField(blank=True, db_index=True, help_text='Número de identificación sin puntos ni guiones', max_length=20, validators=[django.core.validators.RegexValidator(code='invalid_identification_number', message='El número de identificación debe ser solo números sin puntos, guiones o espacios.', regex='^\\d+$')], verbose_name='Número de identificación')),
                ('phone_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='El número de teléfono debe ser solo números sin puntos, guiones o espacios.', regex='^\\d+$')], verbose_name='Número de teléfono')),
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de modificación')),
                ('deleted_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Fecha de eliminación')),
                ('grade', models.CharField(choices=[('PJD', 'Pre-Jardín'), ('JD', 'Jardín'), ('TR', 'Transición'), ('1', 'Primero'), ('2', 'Segundo'), ('3', 'Tercero'), ('4', 'Cuarto'), ('5', 'Quinto'), ('6', 'Sexto'), ('7', 'Séptimo'), ('8', 'Octavo'), ('9', 'Noveno'), ('10', 'Décimo'), ('11', 'Once')], max_length=3, verbose_name='Grado')),
                ('sex', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], default='M', max_length=1, verbose_name='Sexo')),
                ('age', models.IntegerField(verbose_name='Edad')),
                ('working_hours', models.CharField(choices=[('M', 'Mañana'), ('T', 'Tarde')], default='M', max_length=1, verbose_name='Jornada')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='schools.school')),
            ],
            options={
                'verbose_name': 'historical Estudiante',
                'verbose_name_plural': 'historical Estudiantes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRelative',
            fields=[
                ('first_name', models.CharField(blank=True, help_text='Nombre de pila', max_length=100, verbose_name='Nombre(s)')),
                ('last_name', models.CharField(blank=True, help_text='Apellidos completos', max_length=100, verbose_name='Apellidos')),
                ('identification_type', models.CharField(blank=True, choices=[('TI', 'Tarjeta de Identidad'), ('CC', 'Cédula de Ciudadanía'), ('CE', 'Cédula de Extranjería'), ('NUIP', 'Número Único de Identificación Personal'), ('PA', 'Pasaporte')], max_length=5, verbose_name='Tipo de identificación')),
                ('identification_number', models.CharField(blank=True, db_index=True, help_text='Número de identificación sin puntos ni guiones', max_length=20, validators=[django.core.validators.RegexValidator(code='invalid_identification_number', message='El número de identificación debe ser solo números sin puntos, guiones o espacios.', regex='^\\d+$')], verbose_name='Número de identificación')),
                ('phone_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='El número de teléfono debe ser solo números sin puntos, guiones o espacios.', regex='^\\d+$')], verbose_name='Número de teléfono')),
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('modified_date', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de modificación')),
                ('deleted_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Fecha de eliminación')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Acudiente',
                'verbose_name_plural': 'historical Acudientes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
